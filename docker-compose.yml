version: '3.7'
services:
  web-server:
    build: ./project
    restart: always
    depends_on:
      - postgresql
      - redis
    links:
      - postgresql
      - redis
    deploy:
      mode: replicated
      replicas: 3
    labels:
      - "traefik.basic.frontend.rule=Host:localhost"
      - "traefik.basic.port=8000"
      - "traefik.websocket.frontend.rule=Host:127.0.0.1"
      - "traefik.websocket.port=8000" # forward request to port 8000 on container

  postgresql:
    image: 'bitnami/postgresql:11'
    container_name: postgresql-master
    expose:
      - "5432"
    volumes:
      - 'postgresql_master_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=postgresReplication
      - POSTGRESQL_USERNAME=user_go
      - POSTGRESQL_PASSWORD=1234
      - POSTGRESQL_DATABASE=mydb
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - postgres-replication
      - default

  postgresql-slave:
    image: 'bitnami/postgresql:11'
    container_name: postgresql-slave
    expose:
      - "5432"
    volumes:
      - 'postgresql_slave_data:/bitnami/postgresql'
    depends_on:
      - postgresql
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=postgresReplication
      - POSTGRESQL_MASTER_HOST=postgresql
      - POSTGRESQL_PASSWORD=my_password
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - postgres-replication

  redis:
    image: "redis:alpine"
    container_name: redis-master
    restart: always
    expose:
      - "6379"
    volumes:
      - 'redis_master_data:/redis'
    networks:
      - redis-replication
      - default

  redis-slave:
    image: "redis:alpine"
    expose:
      - "6379"
    volumes:
      - 'redis_slave_data:/redis'
    command: redis-server --slaveof redis 6379
    depends_on:
      - redis
    networks:
      - redis-replication
      - default
    deploy:
      mode: replicated
      replicas: 2

  redis-sentinel:
    build: ./redis-persistence
    depends_on:
      - reverse-proxy # run as latest service
    networks:
      - redis-replication
      - default
    deploy:
      mode: replicated
      replicas: 3

  reverse-proxy:
    image: traefik:latest
    container_name: load-balancer
    command: --api --docker
    ports:
      - "80:80"
      - "8080:8080"
    depends_on:
      - web-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  redis-replication:
    driver: bridge
  postgres-replication:
    driver: bridge

volumes:
  postgresql_master_data:
    driver: local
  postgresql_slave_data:
    driver: local
  redis_master_data:
    driver: local
  redis_slave_data:
    driver: local
